buildscript {
    ext {
        kotlin_version = '1.4.21'
        serialization_version = '1.0.0'
        kotlin_exposed_version = '0.31.1'
        h2_database_version = '1.4.197' // mvcc support broke in an update (as of 10/2020). until fixed, use this ver
        jvm_target = '1.8'
        junit_version = '5.2.0'
        log4j2_version = '2.11.1'
        protobuf_plugin_version = '0.8.13'
        protobuf_version = '3.13.0'
        grpc_version = '1.33.1'
        grpc_kotlin_version = '0.2.1'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-serialization', version: kotlin_version
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: protobuf_plugin_version
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'

    group 'net.cydhra'
    version '0.1.0'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io/' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            kotlinOptions.jvmTarget = jvm_target
        }
    }
}

project("acromantula_backend") {
    apply plugin: 'com.google.protobuf'

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:$protobuf_version"
        }

        plugins {
            client {
                artifact = 'com.github.googleapis:gapic-generator-kotlin:master-SNAPSHOT:core@jar'
            }
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
            }
            grpckt {
                artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kotlin_version:jdk7@jar"
            }
        }
        generateProtoTasks {
            ofSourceSet("main").forEach {
                it.plugins {
                    // generate client side stuff and message builders
                    client {
                        option("test-output=build/generated/source/clientTest")
                    }

                    // generate server API
                    grpc {}
                    grpckt {}
                }
            }
        }
    }

    sourceSets {
        bus {
            dependencies {
                // kotlin
                implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.5'
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-protobuf',
                        version: serialization_version

                // utility
                implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
                implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
                implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

                // logging
                implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2_version
                implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version
                implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version
            }
        }

        workspace {
            compileClasspath += sourceSets.bus.runtimeClasspath

            dependencies {
                // database
                implementation group: 'org.jetbrains.exposed', name: 'exposed-core', version: kotlin_exposed_version
                implementation group: 'org.jetbrains.exposed', name: 'exposed-jdbc', version: kotlin_exposed_version
                implementation group: 'org.jetbrains.exposed', name: 'exposed-jodatime', version: kotlin_exposed_version
                implementation group: 'org.jetbrains.exposed', name: 'exposed-dao', version: kotlin_exposed_version
                implementation group: 'com.h2database', name: 'h2', version: h2_database_version
            }
        }

        features {
            compileClasspath += sourceSets.bus.runtimeClasspath
            compileClasspath += sourceSets.workspace.runtimeClasspath
        }

        main {
            compileClasspath += sourceSets.bus.runtimeClasspath
            compileClasspath += sourceSets.workspace.runtimeClasspath
            compileClasspath += sourceSets.features.runtimeClasspath
            runtimeClasspath += sourceSets.bus.runtimeClasspath
            runtimeClasspath += sourceSets.workspace.runtimeClasspath
            runtimeClasspath += sourceSets.features.runtimeClasspath

            java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/java"
            java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpc"
            java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpckt"
            java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/client"
        }

        test {
            compileClasspath += sourceSets.bus.runtimeClasspath
            compileClasspath += sourceSets.workspace.runtimeClasspath
            compileClasspath += sourceSets.features.runtimeClasspath
            runtimeClasspath += sourceSets.bus.runtimeClasspath
            runtimeClasspath += sourceSets.workspace.runtimeClasspath
            runtimeClasspath += sourceSets.features.runtimeClasspath

            java.srcDirs += "${project.buildDir}/generated/source/clientTest"
        }
    }

    // main source set and test
    dependencies {
        // kotlin
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
        implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.5'
        implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-protobuf',
                version: serialization_version

        // protobuf
        implementation group: 'com.google.protobuf', name: 'protobuf-java', version: protobuf_version

        // grpc
        implementation group: 'com.github.googleapis.gax-kotlin', name: 'kgax-grpc', version: 'master-SNAPSHOT'
        implementation group: 'io.grpc', name: 'grpc-netty-shaded', version: grpc_version
        implementation group: 'io.grpc', name: 'grpc-services', version: grpc_version
        implementation group: 'io.grpc', name: 'grpc-kotlin-stub', version: grpc_kotlin_version

        // utility
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
        implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
        implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

        // logging
        implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2_version
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version
        implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version

        // argument parsing for CLI
        implementation group: 'com.xenomachina', name: 'kotlin-argparser', version: '2.0.7'

        // database
        implementation group: 'org.jetbrains.exposed', name: 'exposed-core', version: kotlin_exposed_version
        implementation group: 'com.h2database', name: 'h2', version: h2_database_version

        // testing (mocking required for autogenerated grpc tests)
        testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
        testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit'
        testImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    }

    test {
        useJUnit()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    jar {
        from(sourceSets.bus.output)
        from(sourceSets.workspace.output)
        from(sourceSets.features.output)

        manifest {
            attributes "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "Main-Class": "net.cydhra.acromantula.AcromantulaServiceKt"
        }
    }
}
